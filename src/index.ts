import type { PluginOption } from 'vite'
import path from 'node:path'
import fs from 'node:fs/promises'

interface Config {
    target: string
    runPrettier: boolean
    skMetadataFile: string
}

const vitePluginSvelteTypedRoutes = (config: Partial<Config>) => {
    const cfg = {
        ...{
            target: './src/routes.ts',
            runPrettier: true,
            skMetadataFile: './.svelte-kit/types/route_meta_data.json',
        },
        ...config,
    } satisfies Config

    cfg.target = path.resolve(cfg.target)
    cfg.skMetadataFile = path.resolve(cfg.skMetadataFile)

    async function updateRoutes() {
        const data = (await import(cfg.skMetadataFile)).default
        const t = Object.keys(data)
            .map((k) => `'${k}'`)
            .concat('(string & {})')
            .map((k) => `\n\t| ${k}`)
            .join('')

        const text = `
// This file is autogenerated. Do not edit it directly.

export type AllRoutes = ${t}

declare module '$app/paths' {
	export function resolveRoute(
		route: AllRoutes,
		params?: Record<string, string | undefined>
	): string
}
		`

        if (config.runPrettier) {
            // @ts-ignore -- prettier is optional
            const prettier = await import('prettier')
            const config = await prettier.resolveConfig(cfg.target)
            const formatted = await prettier.format(
                text,
                config ? { ...config, filepath: cfg.target } : undefined
            )
            await fs.writeFile(cfg.target, formatted)
        } else {
            await fs.writeFile(cfg.target, text)
        }

        console.log('Updated routes')
    }

    return {
        name: 'vite-plugin-svelte-typed-routes',
        async buildStart() {
            await updateRoutes()
        },
        async watchChange(id, { event }) {
            if (
                (event === 'create' || event === 'delete') &&
                id.toLocaleLowerCase().endsWith('.server.ts')
            ) {
                await updateRoutes()
            }
        },
    } satisfies PluginOption
}

export default vitePluginSvelteTypedRoutes
